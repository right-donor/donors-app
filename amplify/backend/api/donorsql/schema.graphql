
type User @model @searchable {
  id: ID!
  firstname: String
  lastname: String
  birthday: AWSDateTime
  username: String!
  email: String!
  gender: String
  phonenumber: String!
  photo: S3Object
  blood: BloodData
  type: String
  city: String
  canDonateFrom: AWSDateTime
  donations: [Donation] @connection(name: "DonorDonation")
  patients: [Patient] @connection(name: "DoctorPatient")
  interviews: [Interview]
  hospital: Hospital @connection(name: "DoctorHospital")
}

type Interview {
  date: AWSDateTime!
  weight: Float!
  recentSickness: Boolean!
  recentAntibiotics: Boolean!
  recentPregnancy: Boolean!
  recentAlcohol:Boolean!
  recentVaccines: Boolean!
  recentTattoos: Boolean!
  recentMenstrualCycle: Boolean!
  diabetic: Boolean!
  hypertension:Boolean!
  bloodresults: BloodResults
}

type BloodResults {
  vih: Boolean!
  hepatitisB: Boolean!
  hepatitisC: Boolean!
  syphilis: Boolean!
  chagas: Boolean!
}

type Donation @model @searchable{
  id: ID!
  dateNeeded: AWSDate!
  dateFulfilled: AWSDateTime
  donatedBy: User @connection(name: "DonorDonation")
  assignedTo: Patient @connection(name: "PatientDonation")
  bloodBagId: String
  bloodType: BloodData!
  bagAmount: Int!
  hospital: Hospital!
}

type Patient @model @searchable {
  id: ID!
  firstname: String!
  lastname: String!
  birthday: AWSDateTime!
  gender: String!
  photo: S3Object!
  blood: BloodData
  donations: [Donation] @connection(name: "PatientDonation")
  doctor: User @connection(name: "DoctorPatient")
  hospital: Hospital! @connection(name: "PatientHospital")
}

type Hospital @model {
  id: ID!
  name: String!
  country: String!
  address_line1: String!
  address_state: String!
  address_zip: String!
  doctors: [User] @connection(name: "DoctorHospital")
  patients: [Patient] @connection(name: "PatientHospital")
}

type BloodData {
  type: String
  rh: String
}

type S3Object {
  bucket: String!
  region: String!
  key: String!
}